{"version":3,"sources":["components/App/App.js","index.js"],"names":["BASE_URL","Loading","styled","div","Page","Title","h1","MessageForm","form","MessageNickname","input","MessageTextarea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","h2","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","nickname","setNickname","content","setContent","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","handleInputFocus","useEffect","fetchMessages","fetch","then","res","json","data","catch","err","toString","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","ok","message","value","onChange","target","onFocus","placeholder","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3874230b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst BASE_URL = 'https://student-json-api.lidemy.me/comments'\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: #333a;\n  color: #fff;\n  font-size: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Page = styled.div`\n  width: 600px;\n  margin: 0 auto;\n`\n\nconst Title = styled.h1`\n  color: #333;\n`\n\nconst MessageForm = styled.form`\n  margin-top: 1rem;\n`\n\nconst MessageNickname = styled.input`\n  border: 1px solid #333;\n  border-radius: 0.25rem;\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  font-size: 1.25rem;\n`\n\nconst MessageTextarea = styled.textarea`\n  width: 99%;\n  height: 5rem;\n  resize: vertical;\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  font-size: 1.25rem;\n`\n\nconst SubmitButton = styled.button`\ndisplay: block;\nwidth: 100%;\nmargin-top: 0.5rem;\npadding: 0.5rem;\nborder: none;\nborder-radius: 0.5rem;\n`\n\nconst MessageList = styled.div`\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  border: 1px solid #3335;\n  border-radius: 0.5rem;\n`\n\nconst MessageContainer = styled.div`\n  padding: 1rem 0.5rem;\n`\n\nconst MessageHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #3335;\n`\n\nconst MessageAuthor = styled.div``\n\nconst MessageTime = styled.div``\n\nconst MessageBody = styled.div`\n  margin-top: 0.5rem;\n`\n\nconst ErrorMessage = styled.h2`\n  color: #f009;\n`\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  )\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node\n}\n\nfunction App() {\n  const [messages, setMessages] = useState(null)\n  const [messageApiError, setMessageApiError] = useState(null)\n  const [nickname, setNickname] = useState('')\n  const [content, setContent] = useState('')\n  const [postMessageError, setPostMessageError] = useState(null)\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false)\n\n  const handleInputChange = (e) => setNickname(e.target.value)\n  const handleTextareaChange = (e) => setContent(e.target.value)\n  const handleFormSubmit = (e) => {\n    e.preventDefault()\n    if (isLoadingPostMessage) return\n    setIsLoadingPostMessage(true)\n    fetch(BASE_URL, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        nickname: nickname,\n        body: content\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      setIsLoadingPostMessage(false)\n      if (data.ok === 0) return setPostMessageError(data.message)\n      setNickname('')\n      setContent('')\n      fetchMessages()\n    })\n    .catch((err) => {\n      setIsLoadingPostMessage(false)\n      setPostMessageError(err.toString())\n    })\n  }\n  const handleInputFocus = () => setPostMessageError(null)\n\n  // App render 完才 fetch\n  useEffect(() => fetchMessages(), [])\n\n  const fetchMessages = () => {\n    fetch(`${BASE_URL}?_sort=createdAt&_order=desc`)\n    .then((res) => res.json())\n    .then((data) => setMessages(data))\n    .catch((err) => setMessageApiError(err.toString()))\n  }\n\n  return (\n    <Page>\n      {/* 沒有留言或正在送出留言時顯示 Loading */}\n      {(!messages ||  isLoadingPostMessage) && <Loading>Loading...</Loading>}\n      <Title>簡易留言板啦別要求太多</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageNickname value={nickname} onChange={handleInputChange} onFocus={handleInputFocus} placeholder='nickname' />\n        <MessageTextarea value={content} onChange={handleTextareaChange} onFocus={handleInputFocus} placeholder='content' />\n        <SubmitButton>送出</SubmitButton>\n      </MessageForm>\n      {/* 有 Error 的話顯示 ErrorMessage */}\n      {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      {messageApiError && <ErrorMessage>Something went wrong: {messageApiError}</ErrorMessage>}\n      {/* 有資料才顯示 MessageList */}\n      {messages && (\n        <MessageList>\n          {/* 沒有留言的話顯示 No messages */}\n          {messages.length === 0 && <p>No messages.</p>}\n          {/* 有留言才顯示留言 */}\n          {messages.map((message) => {\n            return (\n              <Message key={message.id} author={message.nickname} time={new Date(message.createdAt).toLocaleString()}>\n                {message.body}\n              </Message>\n            )\n          })}\n        </MessageList>\n      )}\n    </Page>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}